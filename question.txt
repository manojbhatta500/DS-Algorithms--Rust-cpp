2. Remove Duplicates from Sorted Array
Problem: Given a sorted array, remove duplicates in-place such that each unique element appears only once. Return the new length of the array.
Example:
Input: arr = [1, 1, 2, 3, 3, 4]
Output: arr = [1, 2, 3, 4], Length = 4
HinHint: Use two pointers, one for iterating through the array and the other for maintaining the position of the unique elements.


3. Sort an Array of 0s, 1s, and 2s
Problem: Given an array consisting only of 0s, 1s, and 2s, sort it in a single pass.
Example:
Input: arr = [2, 0, 1, 2, 0, 1]
Output: arr = [0, 0, 1, 1, 2, 2]
Hint: Use three pointers: low, mid, and high. Adjust positions based on the value at mid.

4. Container With Most Water
Problem: You are given an array of non-negative integers representing the heights of vertical lines. Find two lines that, together with the x-axis, form a container that holds the most water.
Example:
Input: heights = [1, 8, 6, 2, 5, 4, 8, 3, 7]
Output: 49 (between indices 1 and 8)
Hint: Use two pointers, one at the start and one at the end, and calculate the area. Adjust pointers to maximize the area.


5. Longest Substring with At Most Two Distinct Characters
Problem: Given a string, find the length of the longest substring that contains at most two distinct characters.
Example:
Input: s = "eceba"
Output: 3 (substring "ece")
Hint: Use two pointers to maintain a sliding window and a map to keep track of character frequencies.


6.Bonus Problem: 3Sum
Problem: Find all unique triplets in an array that sum up to a target value of 0.
Example:
Input: nums = [-1, 0, 1, 2, -1, -4]
Output: [[-1, -1, 2], [-1, 0, 1]]
Hint: Sort the array, fix one number, and then use two pointers to find the other two numbers.

